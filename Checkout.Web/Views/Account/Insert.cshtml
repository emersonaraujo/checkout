@model Checkout.Infra.Models.Account

@{
    Layout = null;
}

@using (Html.BeginForm("Insert", "Account", FormMethod.Post))
{
    @Html.ValidationSummary(true)

    @Html.AntiForgeryToken()
    <!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Cadastro de Conta</title>
        <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    </head>
    <body>
        <div class="container">
            <div class="form-horizontal">
                <div class="page-header">
                    <h3><strong>Cadastro de Conta</strong></h3>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Nome Completo" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", Type = "email", placeholder = "exemplo@email.com" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", Type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", Type = "date" } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cpf, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-3">
                        @Html.RadioButtonFor(model => model.Sex, "M", new { htmlAttributes = new { @class = "form-control" } })
                        <label>Masculino</label>
                        &nbsp;&nbsp;&nbsp;
                        @Html.RadioButtonFor(model => model.Sex, "F", new { htmlAttributes = new { @class = "form-control" } })
                        <label>Feminino</label>
                        @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.Complement, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Complement, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Complement, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-1">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <strong>
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    </strong>
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Gravar" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
        <script src="~/Scripts/jquery-1.10.2.min.js"></script>
        <script src="~/Scripts/bootstrap.min.js"></script>
    </body>
</html>
}
